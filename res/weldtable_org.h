/*-------------------------------------------------------------------------------------------*/
/*  [概要]                                                                                   */
/*      溶接条件テーブルＦＬＡＳＨメモリ書き込みプログラム［ヘッダ部］                       */
/*                                                                                           */
/*                                     ------------------------------------------------------*/
/*                                    |    DATE    : CONTENT                                 */
/*                                     ------------------------------------------------------*/
/*                                    | 2016.01.22 : Original                                */
/*                                    | 2016.02.08 : 書き込みタイミングを非常停止信号に変更  */
/*                                    | 2016.03.03 : テーブル内容変更＆設定部簡素化          */
/*                                    | 2025.06.26 : NR1用に変更                             */
/*                                    | 2025.09.08 : 自動機用テーブル追加(+4)                */
/*                                    | 2025.09.09 : 自動機用テーブル追加(+4)                */
/*                                    |            :                                         */
/*-------------------------------------------------------------------------------------------*/
#include <typedef.h>

//----------------------------------------------------------------------------
// 溶接条件テーブルの連番
//  ※書き込み作業の連番（１〜３）
//    １回目＝１ ／ ２回目＝２ ／ ３回目＝３
//
#define		FLASH_WRITE_NO		1
//----------------------------------------------------------------------------

//----------------------------------------------------------------------------
// 溶接条件テーブルの書き込み個数(エンドフラグテーブル含まない）
//  ※書き込み行程の無い行程回の書き込み個数は「０」にすること。
//
//   ex.1
//      溶接条件テーブルの書き込み個数 = 10
//
//       #define		WeldTableNum1st		10		//
//       #define		WeldTableNum2nd		0		// ← 「0」にすること
//       #define		WeldTableNum3rd		0		// ← 「0」にすること
//
//   ex.2
//      溶接条件テーブルの書き込み個数 = 50
//
//       #define		WeldTableNum1st		37		// １工程に最大３７個のテーブルの書き込みが可能
//       #define		WeldTableNum2nd		13		//
//       #define		WeldTableNum3rd		0		// ← 「0」にすること
//
//
#define		WeldTableNum1st		31									// １回目：溶接条件テーブル総数(MAX:37)
#define		WeldTableNum2nd		0									// ２回目：溶接条件テーブル総数(MAX:37)
#define		WeldTableNum3rd		0									// ３回目：溶接条件テーブル総数(MAX:37)
//----------------------------------------------------------------------------

//<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
//<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><> 定数自動生成部 <><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
//<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>

//-----------------------------------------------------
// 書き込み開始位置の自動生成
#define		WeldTableStart1st  	0									// １回目：溶接条件テーブル書き込み開始位置（溶接条件テーブル単位）０＝先頭位置＆FLASH消去有り
#define		WeldTableStart2nd  	WeldTableNum1st						// ２回目：溶接条件テーブル書き込み開始位置（溶接条件テーブル単位：＋１回目）
#define		WeldTableStart3rd  	WeldTableNum1st+WeldTableNum2nd		// ３回目：溶接条件テーブル書き込み開始位置（溶接条件テーブル単位；＋１回目＋２回目）
//-----------------------------------------------------
// 書き込み作業の連番識別子の自動生成
#if (FLASH_WRITE_NO == 1)
	#define		FLASH_1ST			// １回目の書き込み
#elif (FLASH_WRITE_NO == 2)
	#define		FLASH_2ND			// ２回目の書き込み
#elif (FLASH_WRITE_NO == 3)
	#define		FLASH_3RD			// ３回目の書き込み
#else
	#define		FLASH_1ST			// １回目の書き込み
#endif
//-----------------------------------------------------

#ifdef	FLASH_1ST			// １回目
	#if (WeldTableNum1st < 35)	// 書き込む溶接条件数が３４個以下？
		#define		WELDTABLE_ENDCODE
	#else
		#if (WeldTableNum2nd == 0)	// 次回の書き込みは無し？
			#define		WELDTABLE_ENDCODE
		#endif
	#endif
	#ifdef		WELDTABLE_ENDCODE	// エンドコード有り
		#define		WeldTableNum		WeldTableNum1st+1	// 溶接条件テーブル総数（エンドコードがあれば含むこと）
	#else
		#define		WeldTableNum		WeldTableNum1st		// 溶接条件テーブル総数
	#endif
	#define		WeldTableStart  	WeldTableStart1st	// 溶接条件テーブル書き込み開始位置（溶接条件テーブル単位）０＝先頭位置＆FLASH消去有り
#elif defined(FLASH_2ND)	// ２回目
	#if (WeldTableNum2st < 37)	// 書き込む溶接条件数が３７個以下？
		#define		WELDTABLE_ENDCODE
	#else
		#if (WeldTableNum3nd == 0)	// 次回の書き込みは無し？
			#define		WELDTABLE_ENDCODE
		#endif
	#endif
	#ifdef		WELDTABLE_ENDCODE	// エンドコード有り
		#define		WeldTableNum		WeldTableNum2nd+1	// 溶接条件テーブル総数（エンドコードがあれば含むこと）
	#else
		#define		WeldTableNum		WeldTableNum2nd		// 溶接条件テーブル総数
	#endif
	#define		WeldTableStart  	WeldTableStart2nd	// 溶接条件テーブル書き込み開始位置（溶接条件テーブル単位）０＝先頭位置＆FLASH消去有り
#else						// ３回目
	#define		WELDTABLE_ENDCODE						// ３回目の書き込みがある場合は必ずエンドコード有りとする。
	#define		WeldTableNum		WeldTableNum3rd+1	// 溶接条件テーブル総数（エンドコードがあれば含むこと）
	#define		WeldTableStart  	WeldTableStart3rdd	// 溶接条件テーブル書き込み開始位置（溶接条件テーブル単位）０＝先頭位置＆FLASH消去有り
#endif
//<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
//<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
//<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>




/*--------------------------------------------------------------------------------------------------------------*/
/*	2025.03.14	:仮作成(BASE:VP1用溶接条件テーブル)											:	谷川			*/
/*	2025.03.27	:可変パラメータ最大項目数を定義(MAX:160)									:	谷川			*/
/*	2025.03.27	:仮作成(可変パラメータのテーブル引きリストテーブルの拡張に伴う変更)			:	谷川			*/
/*	2025.04.11	:350NR1,500NR1向け最終仕様対応												:	谷川			*/
/*	2025.04.11	:「_NR1」を一時的に「_GX3」に変更（ビルド対策）								:	谷川			*/
/*	2025.04.11	:溶接種別コードを一時的に旧仕様に変更（ビルド対策）							:	谷川			*/
/*	    .  .  	:																			:					*/
/*--------------------------------------------------------------------------------------------------------------*/
/*	[概要]																										*/
/*				溶接種別毎の溶接条件テーブル（ＮＲ１用）														*/
/*--------------------------------------------------------------------------------------------------------------*/
//
/*------------------------------------------------------------------------------*/
/*	[概要]																		*/
/*		溶接種別コード															*/
/*			NOTE：	ＶＰ1用を流用できる？						：	2025.03.14	*/
/*				：	@-1211075_00 ビットフィールド				：	----.--.--	*/
/*				：	NR1最終仕様用に項目変更						：	2025.04.11	*/
/*------------------------------------------------------------------------------*/
/*	[データ説明]　※テーブル容量：２４バイト									*/
/*		uchar		material				材質								*/
/*		uchar		method					溶接法								*/
/*		uchar		pulseCode				パルスモード						*/
/*		uchar		pulseType				パルスタイプ						*/
/*		uchar		wire					ワイヤ径							*/
/*		uchar		extension				突き出し長							*/
/*		uchar		tip						チップタイプ	0:標準 1:ｺﾚｯﾄ		*/	// @-R070901RK1  dummy1 ⇒ tip
/*		uchar		Flag2					溶接種別フラグ２	D0:ｽﾗｸﾞﾚｽ		*/	// @-R091001RK1  dummy2 ⇒ Flag2
/*																D1:ｽﾀｰﾄ制御		*/
/*		uchar		Version					バージョン							*/
/*		uchar		StandardFlag			テーブル標準値フラグ				*/
/*		uchar		Flag3					溶接種別フラグ３					*/
/*		uchar		LowSputter				低スパッタフラグ					*/	// [2025.04.11]
/*		uchar		rsv_1					予約								*/
/*					  |															*/
/*		uchar		rsv_8					予約								*/
/*		uchar		DPS_Lower				ＤＰＳ番号（下位）					*/	// [2025.04.11]
/*		uchar		DPS_Upper				ＤＰＳ番号（上位）					*/	// [2025.04.11]
/*		uchar		VER_Lower				バージョン番号（下位）				*/	// [2025.04.11]
/*		uchar		VER_Upper				バージョン番号（上位）				*/	// [2025.04.11]
/*------------------------------------------------------------------------------*/
typedef	struct
{
#if 0	//350NR1,500NR1		+++++[2025.04.11]+++++		旧仕様版[2025.04.11]
	uchar		material		:	8;		//	+0	材質
	uchar		method			:	8;		//	+1	溶接法
	uchar		pulseMode		:	8;		//	+2	パルスモード
	uchar		pulseType		:	8;		//	+3	パルスタイプ
	uchar		wire			:	8;		//	+4	ワイヤ径
	uchar		extension		:	8;		//	+5	突き出し長
	uchar		tip				:	8;		//	+6	チップタイプ
	uchar		Flag2			:	8;		//	+7	溶接種別フラグ２
	uchar		Version			:	8;		//	+8	バージョン
	uchar		StandardFlag	:	8;		//	+9	特性毎バージョン標準値フラグ
	uchar		Flag3			:	8;		//	+10	溶接種別フラグ３
	uchar		LowSputter		:	8;		//	+11	低スパッタフラグ					[2025.04.11]
	uchar		rsv_1			:	8;		//	+12	予約
	uchar		rsv_2			:	8;		//	+13	予約
	uchar		rsv_3			:	8;		//	+14	予約
	uchar		rsv_4			:	8;		//	+15	予約
	uchar		rsv_5			:	8;		//	+16	予約
	uchar		rsv_6			:	8;		//	+17	予約
	uchar		rsv_7			:	8;		//	+18	予約
	uchar		rsv_8			:	8;		//	+19	予約
	uchar		DPS_Lower		:	8;		//	+20	ＤＰＳ番号（下位）					[2025.04.11]
	uchar		DPS_Upper		:	8;		//	+21	ＤＰＳ番号（上位）					[2025.04.11]
	uchar		VER_Lower		:	8;		//	+22	バージョン番号（下位）				[2025.04.11]
	uchar		VER_Upper		:	8;		//	+23	バージョン番号（上位）				[2025.04.11]
#else	//350NR1,500NR1		+++++[2025.04.11]-----
	uchar		material		:	8;		//	材質
	uchar		method			:	8;		//	溶接法
	uchar		pulseMode		:	8;		//	パルスモード
	uchar		pulseType		:	8;		//	パルスタイプ
	uchar		wire			:	8;		//	ワイヤ径
	uchar		extension		:	8;		//	突き出し長
	uchar		tip				:	8;		//	チップタイプ
	uchar		Flag2			:	8;		//	溶接種別フラグ２
	uchar		Version			:	8;		//	バージョン
	uchar		StandardFlag	:	8;		//	特性毎バージョン標準値フラグ
	uchar		Flag3			:	8;		//	溶接種別フラグ３
	uchar		rsv_1			:	8;		//	予約
	uchar		rsv_2			:	8;		//	予約
	uchar		rsv_3			:	8;		//	予約
	uchar		rsv_4			:	8;		//	予約
	uchar		rsv_5			:	8;		//	予約
	uchar		rsv_6			:	8;		//	予約
	uchar		rsv_7			:	8;		//	予約
	uchar		rsv_8			:	8;		//	予約
	uchar		rsv_9			:	8;		//	予約
	uchar		rsv_10			:	8;		//	予約
	uchar		rsv_11			:	8;		//	予約
	uchar		rsv_12			:	8;		//	予約
	uchar		rsv_13			:	8;		//	予約
#endif	//350NR1,500NR1		+++++[2025.04.11]-----
} WELDCODE, *PWELDCODE;
//
/*------------------------------------------------------------------------------*/
/*	[概要]																		*/
/*		ワイヤ送給速度テーブル													*/
/*			NOTE：	最大５１２個分(1022A迄)						：	2025.03.14	*/
/*				：	最大２５６個分(510A迄)						：	2025.04.11	*/
/*------------------------------------------------------------------------------*/
/*	[データ説明]																*/
/*		usint		Speed[256]				送給テーブル( 0.001 m/min )			*/
/*												[ xx ]	xxは、2A単位			*/
/*------------------------------------------------------------------------------*/
typedef	struct
{
	usint		Speed[256];					//	送給テーブル(0.001m/min)[xx]	※xxは、2A単位			[512]->[256]	//[2025.04.11]
} A2STBL, *PA2STBL;
//
/*------------------------------------------------------------------------------*/
/*	[概要]																		*/
/*		一元電圧テーブル														*/
/*			NOTE：	ＶＰ1用を流用できる？						：	2025.03.14	*/
/*------------------------------------------------------------------------------*/
/*	[データ説明]																*/
/*		usint		Volt[256]				一元電圧テーブル( 0.1 V )			*/
/*												[ xx ]	xxは、0.1m/min単位		*/
/*------------------------------------------------------------------------------*/
typedef	struct
{
	usint		Volt[256];					//	一元電圧テーブル(0.1V)[xx]		※xxは、0.1m/min単位
} S2VTBL, *PS2VTBL;
//
/*------------------------------------------------------------------------------*/
/*	[概要]																		*/
/*		半固定パラメータテーブル												*/
/*			NOTE：	ＶＰ1用を流用できる？						：	2025.03.14	*/
/*				：	項目数を５０４項目に拡大(H379-H504を追加)	：	2025.04.11	*/
/*------------------------------------------------------------------------------*/
/*	[データ説明]																*/
/*		usint		Parm[512]					パラメータ（絶対値）			*/
/*------------------------------------------------------------------------------*/
typedef	struct
{
	usint		Parm[504];					//	パラメータ（絶対値）			[378]->[504]	//[2025.04.11]
} WELDPARM, *PWELDPARM;
//
/*------------------------------------------------------------------------------*/
/*	[概要]																		*/
/*		可変パラーメータ係数テーブル											*/
/*			NOTE：	ＶＰ1用を流用できる？						：	2025.03.14	*/
/*------------------------------------------------------------------------------*/
/*	[データ説明]																*/
/*		float		a						係数ａ								*/
/*		float		b						係数ｂ								*/
/*		float		c						係数ｃ								*/
/*		float		min						係数ｍｉｎ							*/
/*		float       max						係数ｍａｘ							*/
/*------------------------------------------------------------------------------*/
typedef	struct
{
	float		a;							//	係数ａ
	float		b;							//	係数ｂ
	float		c;							//	係数ｃ
	float		min;						//	係数ｍｉｎ
	float		max;						//	係数ｍａｘ
} DCCALPARM, *PDCCALPARM;
//
/*------------------------------------------------------------------------------*/
/*	[概要]																		*/
/*		パラメータテーブル（パルス/短絡）										*/
/*			NOTE：	ＶＰ1用を流用できる？						：	2025.03.14	*/
/*				：	@-R040701RTW								：	----.--.--	*/
/*				：	@-1211075_02								：	----.--.--	*/
/*				：	VP1 AWC										：	2016.02.05	*/
/*				：	VP1 NEW_AWC									：	2016.02.10	*/
/*				：	VP1 NEW_AWC(移植)							：	2016.02.23	*/
/*------------------------------------------------------------------------------*/
/*	[データ説明]																*/
/*		usint		SlowDown				スローダウン( 0.001 m/min )			*/
/*		usint		acc1					送給加速度１( 0.1 )					*/
/*												トーチＯＮ用					*/
/*		usint		acc2					加速度２							*/
/*												初期短絡用						*/
/*		usint		acc3					加速度３							*/
/*												条件変更用						*/
/*		usint		acc4					加速度４							*/
/*												クレータ用						*/
/*		usint		acc5					加速度５							*/
/*												トーチＯＦＦ用					*/
/*		usint		Delay					送給ディレイ						*/
/*		usint		ContArc					連続アークスタート時間				*/
/*		usint		TigAcc					加速度								*/ // @-R060506RK1
/*												ＴＩＧフィラー					*/ // @-R060506RK1
/*												※ スラグレス係数としても使用	*/ // @-R091001RK1
/*		usint		TigDcc					減速度								*/ // @-R060506RK1
/*												ＴＩＧフィラー					*/ // @-R060506RK1
/*		usint		SlowDown_Act			アクティブ：スローダウン			*/ // @-R091001RK1
/*		usint		acc2_Act				アクティブ：加速度２				*/ // @-R091001RK1
/*		usint		Delay_Act				アクティブ：送給ディレイ			*/ // @-R091001RK1
/*								---ＡＷＣ関連---								*/
/*		usint		awc_select				指令値制御有無選択					*/
/*											（０：無し／１：有り）				*/
/*		usint		init_curr_percent		初期条件電流（％）					*/
/*		usint		init_volt_adj			初期条件電圧調整値					*/
/*											※一元電圧に対する調整値			*/
/*											（データ×0.1V	※データは２刻み）	*/
/*		sint		all_init_time			初期条件時間（ｍｓ）				*/
/*		usint		init_up_time			初期条件スタートスロープ時間（ｍｓ）*/
/*		usint		init_dw_time			初期条件ダウンスロープ時間（ｍｓ）	*/
/*		usint		init_limit_curr			初期条件電流制限					*/
/*											（データ×１Ａ　※データは２刻み）	*/
/*		usint		crat_curr_percent		クレータ条件電流（％）				*/
/*		usint		crat_volt_adj			クレータ電圧調整値					*/
/*											※一元電圧に対する調整値			*/
/*											（データ×0.1V　※データは２刻み）	*/
/*		usint		all_crat_time			クレータ条件時間（ｍｓ）			*/
/*		usint		crat_dw_time			クレータ条件ダウンスロープ時間(ms)	*/
/*		usint		crat_skip_time			クレータスキップ時間				*/
/*							--- 新ＡＷＣ関連---									*/
/*		float		init_up_a				初期条件スタートスロープ　ａ		*/
/*		float		init_up_b				初期条件スタートスロープ　ｂ		*/
/*		float		init_up_c				初期条件スタートスロープ　ｃ		*/
/*		usint		init_up_min				初期条件スタートスロープ　ｍｉｎ	*/
/*		usint		init_up_max				初期条件スタートスロープ　ｍａｘ	*/
/*																				*/
/*------------------------------------------------------------------------------*/
typedef	struct
{
	usint		SlowDown;				//	スローダウン(0.001m/min)
	usint		acc1;					//	送給加速度１(0.1)	トーチＯＮ用
	usint		acc2;					//		加速度２		初期短絡用
	usint		acc3;					//		加速度３		条件変更用
	usint		acc4;					//		加速度４		クレータ用
	usint		acc5;					//		加速度５		トーチＯＦＦ用
	usint		Delay;					//	送給ディレイ
	usint		ContArc;				//	連続アークスタート時間
	usint		TigAcc;					//	加速度	ＴＩＧフィラー	※スラグレス係数としても使用
	usint		TigDcc;					//	減速度	ＴＩＧフィラー
	usint		SlowDown_Act;			//	アクティブ：スローダウン
	usint		acc2_Act;				//	アクティブ：加速度２
	usint		Delay_Act;				//	アクティブ：送給ディレイ
	usint		acc6;					//	送給加速度６(0.1)
	usint		accSw_Wf;				//	送給加速度切替送給量(0.1)
										//----- AWC -----
	usint		awc_select;				//指令値制御有無選択（０：無し／１：有り）
	usint		init_curr_percent;		//初期条件電流（％）
	usint		init_volt_adj;			//初期条件電圧調整値（一元電圧に対する調整値：データ×0.1V　※データは２刻み）
	usint		all_init_time;			//初期条件時間（ｍｓ）
	usint		init_up_time;			//初期条件スタートスロープ時間（ｍｓ）
	usint		init_dw_time;			//初期条件ダウンスロープ時間（ｍｓ）
	usint		init_limit_curr;		//初期条件電流制限（データ×１Ａ　※データは２刻み）
	usint		crat_curr_percent;		//クレータ条件電流（％）
	usint		crat_volt_adj;			//クレータ電圧調整値（一元電圧に対する調整値：データ×0.1V　※データは２刻み）
	usint		all_crat_time;			//クレータ条件時間（ｍｓ）
	usint		crat_dw_time;			//クレータ条件ダウンスロープ時間（ｍｓ）
	usint		crat_skip_time;			//クレータスキップ時間 (msec)
										//----- NEW_AWC -----
	float		init_up_a;				//初期条件スタートスロープ　ａ
	float		init_up_b;				//初期条件スタートスロープ　ｂ
	float		init_up_c;				//初期条件スタートスロープ　ｃ
	usint		init_up_min;			//初期条件スタートスロープ　ｍｉｎ
	usint		init_up_max;			//初期条件スタートスロープ　ｍａｘ
} PARMTBL, *PPARMTBL;
//
/*------------------------------------------------------------------------------*/
/*	[概要]																		*/
/*		半固定パラメータ４〜６（データ宣言部では不要）							*/
/*			NOTE：	ＶＰ1用を流用できる？						：	2025.03.14	*/
/*				：	@-1206047_00								：	----.--.--	*/
/*				：	項目数を５０４項目に拡大(H379-H504を追加)	：	2025.04.11	*/
/*------------------------------------------------------------------------------*/
typedef	struct
{
	usint				Parm[504];				//	半固定パラメータ４〜６		[378]->[504]	//[2025.04.11]
} WELDPARM_4_6, *PWELDPARM_4_6;
//
/*------------------------------------------------------------------------------*/
/*	[概要]																		*/
/*		可変パラメータのテーブル引き登録エリア情報テーブル						*/
/*			NOTE：	ＮＲ１用に新設								：	2025.03.14	*/
/*------------------------------------------------------------------------------*/
typedef	struct
{
	sint		V_number;					//	Ｖ番号
	float		Coefficient;				//	係数
} CALPARMLIST, *PCALPARMLIST;
//
/*------------------------------------------------------------------------------*/
/*	[概要]																		*/
/*		可変パラメータのテーブル引きデータテーブル								*/
/*			NOTE：	ＮＲ１用に新設								：	2025.03.14	*/
/*------------------------------------------------------------------------------*/
typedef	struct
{
	sint		Data[128];					//	テーブル引きデータ
} CALPARMDATATBL, *PCALPARMDATATBL;
//
//
//
#define	PRESET_CALPARM_LIST_MAX		16		// 可変パラメータのテーブル引きデータテーブルの最大数：１６（エンドマーク込み)	23->30	[2025.03.27]	30->16	[2025.04.11]
//
#define	CALC_PARM_MAX_ITEM			160		// 可変パラメータ最大項目数：１６０項目(最終項目[160]含む)	+++++[2025.03.27]-----
//
/*------------------------------------------------------------------------------*/
/*	[概要]																		*/
/*		溶接条件テーブル														*/
/*			NOTE：	ＮＲ１用									：	2025.03.14	*/
/*				：　350NR1,500NR1向け最終仕様対応				：	2025.04.11	*/
/*------------------------------------------------------------------------------*/
typedef	struct
{
	WELDCODE		WeldCode;										//	溶接種別コード
	A2STBL			A2S_Pulse;										//	ワイヤ送給テーブル（パルス)
	S2VTBL			S2V_Pulse;										//	一元電圧テーブル（パルス）
	A2STBL			A2S_Short;										//	ワイヤ送給テーブル（短絡）
	S2VTBL			S2V_Short;										//	一元電圧テーブル（短絡）
	WELDPARM		WeldParm;										//	半固定パラメータ
	DCCALPARM		CalParm[116];									//	可変パラメータ係数（「可変パラメータ係数：64」＋「可変パラメータ係数２：32」＋「追加可変パラメータ係数：20」）	[2025.04.11]
	PARMTBL			ParmTbl_Pls;									//	パラメータテーブル（パルス）
	PARMTBL			ParmTbl_Short;									//	パラメータテーブル（短絡）
																	//
	CALPARMLIST		CalParmList[PRESET_CALPARM_LIST_MAX];			//	可変パラメータのテーブル引きリストテーブル(エンドコードを含め最大１６)	[32]->[16]	//[2025.04.11]
																	//
	sint			V05_Data[128];									//		Ｖ５テーブル
	sint			V06_Data[128];									//		Ｖ６テーブル
	sint			V08_Data[128];									//		Ｖ８テーブル
	sint			V12_Data[128];									//		Ｖ１２テーブル
	sint			V32_Data[128];									//		Ｖ３２テーブル
	sint			V34_Data[128];									//		Ｖ３４テーブル
	sint			V36_Data[128];									//		Ｖ３６テーブル
	sint			V56_Data[128];									//		Ｖ５６テーブル
	sint			V59_Data[128];									//		Ｖ５９テーブル
	sint			V68_Data[128];									//		Ｖ６８テーブル
	sint			V13_Data[128];									//		Ｖ１３テーブル
	sint			V15_Data[128];									//		Ｖ１５テーブル
	sint			V18_Data[128];									//		Ｖ１８テーブル
	sint			V19_Data[128];									//		Ｖ１９テーブル
	sint			V20_Data[128];									//		Ｖ２０テーブル
	sint			V94_Data[128];									//		Ｖ９４テーブル
	sint			V95_Data[128];									//		Ｖ９５テーブル
	sint			V57_Data[128];									//		Ｖ５７テーブル
	sint			V93_Data[128];									//		Ｖ９３テーブル
																	//
	CALPARMDATATBL	CalParmDataTable[PRESET_CALPARM_LIST_MAX-1];	//	可変パラメータのテーブル引きデータテーブル(最大１５(エンドマークエリアは無し))	[32]->[15]	[2025.04.11]
																	//
																	//	短絡用溶接ナビデータ
	float			Navi_Pram1[7];									//		Ｔ継ぎ手データ
	float			Navi_Pram2[7];									//		重ね継ぎ手データ
	float			Navi_Pram3[7];									//		突き合わせデータ
																	//	パルス用溶接ナビデータ
	float			Navi_P_Pram1[7];								//		Ｔ継ぎ手データ
	float			Navi_P_Pram2[7];								//		重ね継ぎ手データ
	float			Navi_P_Pram3[7];								//		突き合わせデータ
																	//
} WELDTABLE_GX3, *PWELDTABLE_GX3;	//	WELDTABLE_NR1, *PWELDTABLE_NR1;		[2025.04.11]
//
/*------------------------------------------------------------------------------*/
/*	[概要]																		*/
/*		溶接種別名称定義														*/
/*			NOTE：	ＶＰ1用を流用できる？						：	2025.03.14	*/
/*				：	@-1211075_00 ビットフィールド				：	----.--.--	*/
/*------------------------------------------------------------------------------*/
/*	[データ説明]																*/
/*		uchar		Kind					種別(d0:材質、d1:溶接法)			*/
/*		uchar		Code					コード								*/
/*		char		Name[16]				名称								*/
/*------------------------------------------------------------------------------*/
typedef	struct
{
	uchar		Kind			:	8;		//	種別(d0:材質、d1:溶接法)
	uchar		Code			:	8;		//	コード
	char		Name_1			:	8;		//	名称
	char		Name_2			:	8;
	char		Name_3			:	8;
	char		Name_4			:	8;
	char		Name_5			:	8;
	char		Name_6			:	8;
	char		Name_7			:	8;
	char		Name_8			:	8;
	char		Name_9			:	8;
	char		Name_10			:	8;
	char		Name_11			:	8;
	char		Name_12			:	8;
	char		Name_13			:	8;
	char		Name_14			:	8;
	char		Name_15			:	8;
	char		Name_16			:	8;
} WELDNAME, *PWELDNAME;
//
/*------------------------------------------------------------------------------*/
/*	[概要]																		*/
/*		溶接テーブルバージョン													*/
/*			NOTE：	ＶＰ1用を流用できる？						：	2025.03.14	*/
/*				：	@-1211075_00								：	----.--.--	*/
/*------------------------------------------------------------------------------*/
typedef struct
{
 	char		Name_1			:	8;
	char		Name_2			:	8;
	char		Name_3			:	8;
	char		Name_4			:	8;
	char		Name_5			:	8;
	char		Name_6			:	8;
	char		Name_7			:	8;
	char		Name_8			:	8;
	char		Name_9			:	8;
	char		Name_10			:	8;
	char		Name_11			:	8;
	char		Name_12			:	8;
	char		Name_13			:	8;
	char		Name_14			:	8;
	char		Name_15			:	8;
	char		Name_16			:	8;
} WLDTBL_VER, *PWLDTBL_VER;
//
/*------------------------------------------------------------------------------*/
/*	[概要]																		*/
/*		溶接条件テーブル：ヘッダー												*/
/*			NOTE：	ＶＰ1用を流用できる？						：	2025.03.14	*/
/*------------------------------------------------------------------------------*/
typedef	struct
{
	char				Type_1		:	8;		//	識別子
	char				Type_2		:	8;		//
	char				Type_3		:	8;		//
	char				Type_4		:	8;		//
	char				Type_5		:	8;		//
	char				Type_6		:	8;		//
	char				Type_7		:	8;		//
	char				Type_8		:	8;		//
	char				Type_9		:	8;		//
	char				Type_10		:	8;		//
	char				Type_11		:	8;		//
	char				Type_12		:	8;		//
	char				Type_13		:	8;		//
	char				Type_14		:	8;		//
	char				Type_15		:	8;		//
	char				Type_16		:	8;		//
	char				*pVersion;				//	バージョン
//	PWLDTBL_VER			pVersion;				//	バージョン
	PWELDNAME			pNamTbl;				//	溶接種別名称定義テーブル
//	PWELDTABLE_NR1		pWldTbl;				//	溶接条件テーブル
	PWELDTABLE_GX3		pWldTbl;				//	溶接条件テーブル	[2025.04.11]
} H_WELDTABLE_GX3, *PH_WELDTABLE_GX3;	//	H_WELDTABLE_NR1, *PH_WELDTABLE_NR1;		[2025.04.11]
/*------------------------------------------------------------------------------*/
/* end of file 																	*/
/*------------------------------------------------------------------------------*/
